"use client";
import { useDispatch, useSelector } from "react-redux";
import {
  Square3Stack3DIcon,
  RectangleStackIcon,
  DocumentIcon,
} from "@heroicons/react/24/outline";
import Image from "next/image";
import React, { FC, useState, useEffect } from "react";
import { expandTopicAsync } from "@/app/reducersSlices/searchReducer";
import { Loading } from "@nextui-org/react";

export interface FlightCardProps {
  className?: string;
  data: {
    title: string;
    content: string;
  };
  setnext: any;
  isLoading: any;
  searchResults: any[];
  onChangeTopic: any;
  selectedTitle: string;
}

const ModuleCardsLarge: FC<FlightCardProps> = ({
  className = "",
  data,
  setnext,
  isLoading,
  searchResults,
  onChangeTopic,
  selectedTitle,
}) => {
  const [isOpen, setIsOpen] = useState(false);
  const [title, settitle] = useState("") as any;
  const [content, setcontent] = useState("");
  const dispatch = useDispatch();

  const renderDetail = (title: any) => {
    if (!isOpen) return null;

    return (
      <div className="space-y-2  border-2 border-neutral-100 p-2 rounded-2xl dark:border-neutral-800 ">
        {isLoading ? (
          <Loading type="points" />
        ) : (
          searchResults?.map((item: any, index: any) => (
            <div
              onClick={() => {
                setcontent(onChangeTopic(item.title, selectedTitle)); // pass selectedTitle to onChangeTopic
                settitle(item.title);
                setnext(item.title);
              }}
              className={` my-0 border-2 border-neutral-100 p-2 rounded-xl dark:border-neutral-800 sm:pr-20 relative  ${className}`}
            >
              <div className="flex  dark:border-neutral-800  flex-col sm:flex-row sm:items-center space-y-2 sm:space-y-0">
                <div className=" flex-shrink-0">
                  <DocumentIcon className="h-6 w-6" />
                </div>
                <div className="hidden cursor-pointer lg:block  min-w-[300px] flex-[0] ">
                  <div className="font-medium text-left pl-2 text-lg line-clamp-1">
                    {item.title}
                  </div>
                </div>
                <div className="flex-[4] whitespace-nowrap sm:text-right">
                  <div></div>
                </div>
              </div>
            </div>
          ))
        )}
      </div>
    );
  };

  return (
    <div
      className={`nc-FlightCardgroup p-4 sm:p-6 relative bg-white dark:bg-neutral-900 border border-neutral-100
     dark:border-neutral-800 rounded-2xl overflow-hidden hover:shadow-lg transition-shadow space-y-6 ${className}`}
    >
      <div className={` sm:pr-20 relative  ${className}`}>
        {/*  eslint-disable-next-line jsx-a11y/anchor-has-content */}
        <a href="##" className="absolute inset-0" />

        <span
          className={`absolute right-0 bottom-0 sm:bottom-auto sm:top-1/2 sm:-translate-y-1/2 w-10 h-10 bg-neutral-50 dark:bg-neutral-800 rounded-full flex items-center justify-center cursor-pointer ${
            isOpen ? "transform rotate-90" : ""
          }`}
          onClick={() => {
            settitle(data.title);
            dispatch(expandTopicAsync(data.title));
            setIsOpen(!isOpen);
          }}
        >
          <i className="text-xl las la-angle-right"></i>
        </span>

        <div className="flex flex-col sm:flex-row sm:items-center space-y-6 sm:space-y-0">
          {/* LOGO IMG */}
          <div className=" flex-shrink-0">
            {/* <Image
              src={data.airlines.logo}
              width={40}
              height={40}
              className="w-10"
              alt="air-logo"
              sizes="40px"
            /> */}
            <RectangleStackIcon className="h-6 w-6" />
          </div>

          {/* FOR MOBILE RESPONSIVE */}

          {/* TIME - NAME */}
          <div className="hidden lg:block  min-w-[300px] flex-[0] ">
            <div className="font-medium pl-2 text-left text-lg w-full">
              {data.title}
            </div>
          </div>

          {/* PRICE */}
          <div className="flex-[4] whitespace-nowrap sm:text-right">
            {/* <div>
              <span className="text-xl font-semibold text-secondary-6000">
                hkhj
              </span>
            </div> */}
          </div>
        </div>
      </div>

      {/* DETAIL */}
      {isOpen ? renderDetail(data.title) : ""}
    </div>
  );
};

export default ModuleCardsLarge;
